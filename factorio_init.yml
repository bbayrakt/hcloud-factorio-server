---
- name: Deploy Factorio server
  hosts: localhost
  vars:
    terraform_directory: "{{ playbook_dir }}/terraform"
  vars_files:
    - vars/factorio.yml

  tasks:
    - name: Deploy server and components
      community.general.terraform:
        project_path: "{{ terraform_directory }}"
        state: present
        force_init: true
        provider_upgrade: true
        variables:
          hcloud_api_token: "{{ lookup('env', 'TF_VAR_hcloud_api_token') }}"
          server_type: "{{ server_type }}"
          datacenter: "{{ datacenter }}"
          image: "{{ image }}"
          pub_ssh_key: "{{ pub_ssh_key }}"
        backend_config:
          address: "{{ tf_address }}"
          lock_address: "{{ tf_lock_address }}"
          unlock_address: "{{ tf_lock_address }}"
          username: "{{ tf_username }}"
          password: "{{ tf_password }}"
          lock_method: "{{ tf_lock_method }}"
          unlock_method: "{{ tf_unlock_method }}"
          retry_wait_min: "{{ tf_retry_wait_min }}"

    - name: Get the public IPv4 address of Factorio server
      ansible.builtin.command: terraform output -raw ipv4_address
      register: factorio_ipv4
      args:
        chdir: "{{ terraform_directory }}"
      changed_when: factorio_ipv4.rc != 0

    - name: Get the public IPv6 address of Factorio server
      ansible.builtin.command: terraform output -raw ipv6_address
      register: factorio_ipv6
      args:
        chdir: "{{ terraform_directory }}"
      changed_when: factorio_ipv6.rc != 0

    - name: Create CloudFlare DNS A record
      community.general.cloudflare_dns:
        zone: "{{ cf_zone }}"
        record: "{{ cf_record }}"
        type: A
        value: "{{ factorio_ipv4.stdout }}"
        api_token: "{{ cf_api_token }}"
        ttl: 120
      when:
        - cf_api_token is defined
        - cf_api_token != ''
        - cf_zone is defined
        - cf_zone != ''
        - cf_record is defined
        - cf_record != ''

    - name: Create CloudFlare DNS AAAA record
      community.general.cloudflare_dns:
        zone: "{{ cf_zone }}"
        record: "{{ cf_record }}"
        type: AAAA
        value: "{{ factorio_ipv6.stdout }}"
        api_token: "{{ cf_api_token }}"
        ttl: 120
      when:
        - cf_api_token is defined
        - cf_api_token != ''
        - cf_zone is defined
        - cf_zone != ''
        - cf_record is defined
        - cf_record != ''

    - name: Wait for server to come online
      ansible.builtin.wait_for:
        host: "{{ factorio_ipv4.stdout }}"
        port: 22
        delay: 10

    - name: Refresh Ansible inventory
      ansible.builtin.meta: "refresh_inventory"

- name: Setup Factorio server
  hosts: ansible_managed_vm
  remote_user: root
  vars_files:
    - /vars/factorio.yml
  roles:
    - factorio_init
