---
- name: Update packages
  ansible.builtin.apt:
    name: "*"
    state: latest
    only_upgrade: true
    update_cache: true

- name: Check if reboot required
  ansible.builtin.stat:
    path: /var/run/reboot-required
  register: reboot_required

- name: Reboot server
  ansible.builtin.reboot:
  when: reboot_required.stat.exists

# TODO
# Harden sshd_config

# TODO
# Install and configure Fail2ban

- name: Create Factorio compose directory
  ansible.builtin.file:
    path: /root/factorio
    state: directory
    owner: root
    group: root
    mode: '0750'

- name: Create initial docker-compose.yml
  ansible.builtin.copy:
    src: "{{ role_path }}/files/docker-compose.yml"
    dest: /root/factorio/docker-compose.yml
    owner: root
    group: root
    mode: '0644'

- name: Create Factorio data folder
  ansible.builtin.file:
    path: /opt/factorio
    state: directory
    owner: 845
    group: 845
    mode: '0755'

- name: Initialize Factorio server
  community.docker.docker_compose_v2:
    project_src: factorio

- name: Stop Factorio server
  community.docker.docker_compose_v2:
    project_src: factorio
    state: stopped

- name: Check if Ansible managed Factorio save exists
  ansible.builtin.stat:
    path: "{{ playbook_dir }}/ansible_managed_save.zip"
  register: ansible_managed_save
  delegate_to: localhost

- name: Copy Ansible managed Factorio save
  ansible.builtin.copy:
    src: "{{ playbook_dir }}/ansible_managed_save.zip"
    dest: /opt/factorio/saves/ansible_managed_save.zip
    owner: 845
    group: 845
    mode: '0755'
  when: ansible_managed_save.stat.exists

- name: Update docker-compose.yml
  ansible.builtin.template:
    src: "{{ role_path }}/templates/docker-compose.yml.j2"
    dest: /root/factorio/docker-compose.yml
    owner: root
    group: root
    mode: '0644'
  when: ansible_managed_save.stat.exists

- name: Generate server-whitelist.json
  ansible.builtin.copy:
    dest: /opt/factorio/config/server-whitelist.json
    content: "{{ factorio_whitelist | to_nice_json }}\n"
    owner: 845
    group: 845
    mode: '0644'
  when:
    - factorio_whitelist is defined
    - factorio_whitelist | length > 0

- name: Generate server-banlist.json
  ansible.builtin.copy:
    dest: /opt/factorio/config/server-banlist.json
    content: "{{ factorio_banlist | to_nice_json }}\n"
    owner: 845
    group: 845
    mode: '0644'
  when:
    - factorio_banlist is defined
    - factorio_banlist | length > 0

- name: Generate server-adminlist.json
  ansible.builtin.copy:
    dest: /opt/factorio/config/server-adminlist.json
    content: "{{ factorio_adminlist | to_nice_json }}\n"
    owner: 845
    group: 845
    mode: '0644'
  when:
    - factorio_adminlist is defined
    - factorio_adminlist | length > 0

- name: Generate server-settings.json
  ansible.builtin.template:
    src: "{{ role_path }}/templates/server-settings.json.j2"
    dest: /opt/factorio/config/server-settings.json
    owner: 845
    group: 845
    mode: '0644'

- name: Start Factorio server
  community.docker.docker_compose_v2:
    project_src: factorio
